int C1=99, C2=98; // could be anything such that != 0 and C1 != C2
border C0(t=0,2*pi){x=5*cos(t); y=5*sin(t);}
plot( C0(80)// to see the border of the domain
	//+ C11(5)+C12(20)+C13(5)+C14(20)
	//+ C21(5)+C22(20)+C23(5)+C24(20),
	,wait=true);
mesh Th=buildmesh( C0(80)
	//+ C11(5)+C12(20)+C13(5)+C14(20)
	//+ C21(5)+C22(20)+C23(5)+C24(20)
	);
plot(Th,wait=1);
//
real x0 = 3, y0 = 0., eps=1.e-17, dx0=1.e-5, dy0=1.e-5,dIdx0=5.,dIdy0=5.,dGdx0,dGdy0,
		xn=0., yn=0.;
int i,imax = 100;
fespace Vh(Th,P2); Vh phi,phi0,lambda=1000000,v;
//
func g = dx(phi0)*N.x + dy(phi0)*N.y;
func I = .5 * int1d(Th,C0)( (g - dx(phi)*N.x-dy(phi)*N.y)^2 );

func norm  = dIdx0*dIdx0 + dIdy0*dIdy0;

func real G(real x, real x0, real y, real y0)
{
  return exp(-(x-x0)^2-(y-y0)^2);
}

func real alpha(H)
{
	if(H>eps)
		return 1./H;
	else 
		return 1e6;
}

problem a(phi,v)= int2d(Th)(dx(phi)*dx(v)+dy(phi)*dy(v))
						+ int2d(Th) (G(x,xn,y,yn)*v)
						+	on(C0,phi=0)
						;
problem b(lambda,v)= int2d(Th)(dx(lambda)*dx(v)+dy(lambda)*dy(v))
							+ on(C0,lambda = g- dx(phi)*N.x - dy(phi)*N.y)
							;

problem initial(phi0,v)= int2d(Th)(dx(phi0)*dx(v)+dy(phi0)*dy(v))
						+ int2d(Th) (G(x,x0,y,y0)*v)
						+	on(C0,phi0=0)
						;

initial;

cout << "norm = " << " " << norm << " | eps = " << eps << endl;
while(1){
	a; // DPhi = G
	b; // Dlambda = 0
  dGdx0 = (G(x,x0+dx0,y,y0)-G(x,x0,y,y0))/dx0; // dG/dx0
  dGdy0 = (G(x,x0,y,y0+dy0)-G(x,x0,y,y0))/dy0; // dG/dy0
  dIdx0 = -int2d(Th)(lambda*dGdx0); // dI/dx0
  dIdy0 = -int2d(Th)(lambda*dGdy0); // dI/dy0
	xn = xn-pow(norm,.1)*100000*dIdx0;
	yn = yn-pow(norm,.1)*100000*dIdy0;
	plot(phi,wait=false, value=true, fill=true
		,cmm="norm= "+norm+"; x= "+xn+"; y= "+yn);
  cout << "norm = " << " " << norm << " | eps = " << eps << endl;
}						
